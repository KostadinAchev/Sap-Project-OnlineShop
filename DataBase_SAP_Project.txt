drop database if exists articoconsole;
create database articoConsole;
use articoConsole;

create table user(
	id INT PRIMARY KEY auto_increment,
    isadmin boolean,
    isstaff boolean,
    username VARCHAR(255) unique,
    password VARCHAR(255) unique,
    firstName VARCHAR(255),
    lastName VARCHAR(255),
    addressLine TEXT,
    country VARCHAR(255),
    city VARCHAR(255),
    postcode VARCHAR(20),
    email VARCHAR(255),
    balance DECIMAL(10, 2)
);

CREATE TABLE admin (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL
);

CREATE TABLE products (
    id INT PRIMARY KEY auto_increment,
    name VARCHAR(255),
    price DECIMAL(10, 2),
    productDescription TEXT,
    hasDiscount BOOLEAN,
    discountPercentage DECIMAL(5, 2)
);

CREATE TABLE discounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    promotionDescription TEXT,
    start_date DATETIME,
    end_date DATETIME,
    FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE TABLE customers (
	id INT PRIMARY KEY auto_increment,
    username VARCHAR(255) unique,
    password VARCHAR(255) unique,
    firstName VARCHAR(255),
    lastName VARCHAR(255),
    addressLine TEXT,
    country VARCHAR(255),
    city VARCHAR(255),
    postcode VARCHAR(20),
    email VARCHAR(255),
    balance DECIMAL(10, 2)
);

CREATE TABLE staff (
	id INT PRIMARY KEY auto_increment,
    username VARCHAR(255) unique,
    password VARCHAR(255) unique,
    name VARCHAR(255),
    email VARCHAR(255),
    workingHours VARCHAR(255)
);

CREATE TABLE inventory (
    product_id INT PRIMARY KEY,
    quantity INT,
    FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_username VARCHAR(255),
    product_id INT,
    quantity INT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_username) REFERENCES customers(username),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE TABLE reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    customer_username VARCHAR(255),
    rating INT,
    comment TEXT,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(id),
    FOREIGN KEY (customer_username) REFERENCES customers(username)
);

INSERT INTO Admin (username, password) VALUES ('admin', 'admin');